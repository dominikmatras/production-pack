global
  log stdout format raw local0
  maxconn 5000
  tune.ssl.default-dh-param 2048

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  option  http-keep-alive
  option  forwardfor
  timeout connect 5s
  timeout client  30s
  timeout server  30s
  retries 3
  http-reuse safe
  unique-id-format "%[req.hdr(X-Request-Id),hex,word(1,.)]"
  unique-id-header X-Request-Id

frontend fe_api
  bind *:8080

  http-request set-var(txn.origin) req.hdr(Origin) if { hdr(Origin) -m found }
  http-request set-var(txn.acrh)   req.hdr(Access-Control-Request-Headers) if { hdr(Access-Control-Request-Headers) -m found }

  acl is_options method OPTIONS
  http-request return status 204 hdr Access-Control-Allow-Origin %[var(txn.origin)] hdr Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" hdr Access-Control-Allow-Headers %[var(txn.acrh)] hdr Access-Control-Allow-Headers "Authorization, Content-Type" hdr Access-Control-Max-Age 86400 hdr Vary Origin if is_options { var(txn.origin) -m found }

  http-request return status 204 hdr Access-Control-Allow-Origin * hdr Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" hdr Access-Control-Allow-Headers "Authorization, Content-Type" hdr Access-Control-Max-Age 86400 hdr Vary Origin if is_options !{ var(txn.origin) -m found }

  http-response set-header Access-Control-Allow-Origin %[var(txn.origin)] if { var(txn.origin) -m found }
  http-response add-header  Access-Control-Allow-Origin *                 unless { var(txn.origin) -m found }
  http-response add-header  Access-Control-Allow-Headers "Authorization, Content-Type"
  http-response set-header  Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS"
  http-response add-header  Access-Control-Expose-Headers "X-Request-Id"
  http-response add-header  Vary "Origin"

  acl path_user       path_beg /api/v1/user
  acl path_order      path_beg /api/v1/order
  acl path_production path_beg /api/v1/production
  use_backend be_user       if path_user
  use_backend be_order      if path_order
  use_backend be_production if path_production
  default_backend be_fallback

backend be_user
  option httpchk GET /health
  http-check expect rstatus 2..|3..
  balance roundrobin
  server user1 user-service:8081 check

backend be_order
  option httpchk GET /health
  http-check expect rstatus 2..|3..
  balance roundrobin
  server order1 order-service:8082 check

backend be_production
  option httpchk GET /health
  http-check expect rstatus 2..|3..
  balance roundrobin
  server prod1 production-service:8083 check

backend be_fallback
  http-request return status 404 content-type application/json lf-string '{ "error": "Not Found" }'
