global
  log stdout format raw local0
  maxconn 5000
  tune.ssl.default-dh-param 2048

defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  option  http-keep-alive
  option  forwardfor
  timeout connect 5s
  timeout client  30s
  timeout server  30s
  retries 3
  http-reuse safe
  unique-id-format "%[req.hdr(X-Request-Id),hex,word(1,.)]"
  unique-id-header X-Request-Id

# Prosty rate limiting: 100 req / 10s per IP
frontend fe_api
  bind *:8080

  # CORS preflight (OPTIONS) - dopasuj origin/methods wg potrzeb
  acl is_options method OPTIONS
  http-response add-header Access-Control-Allow-Origin  "*"
  http-response add-header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS"
  http-response add-header Access-Control-Allow-Headers "Authorization,Content-Type"
  http-response add-header Access-Control-Expose-Headers "X-Request-Id"
  http-response add-header Vary "Origin"

  # szybka ścieżka dla preflight
  http-request return status 204 if is_options

  # rate limit
  stick-table type ip size 100k expire 10s store http_req_cnt
  http-request track-sc0 src
  acl too_many  sc_http_req_cnt(0) gt 100
  http-request deny status 429 if too_many

  # routing po ścieżkach
  acl path_user       path_beg /api/v1/user
  acl path_order      path_beg /api/v1/order
  acl path_production path_beg /api/v1/production

  # przekazywanie informacji o kliencie
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  http-request set-header X-Forwarded-Proto http  if !{ ssl_fc }
  http-request set-header X-Forwarded-Host %[req.hdr(host)]
  http-request set-header X-Request-Id %[unique-id]

  use_backend be_user       if path_user
  use_backend be_order      if path_order
  use_backend be_production if path_production

  default_backend be_fallback

backend be_user
  option httpchk GET /health
  http-check expect rstatus 2..|3..
  balance roundrobin
  server user1 user-service:8081 check

backend be_order
  option httpchk GET /health
  http-check expect rstatus 2..|3..
  balance roundrobin
  server order1 order-service:8082 check

backend be_production
  option httpchk GET /health
  http-check expect rstatus 2..|3..
  balance roundrobin
  server prod1 production-service:8083 check

backend be_fallback
  http-request return status 404 content-type application/json lf-string '{ "error": "Not Found" }'
